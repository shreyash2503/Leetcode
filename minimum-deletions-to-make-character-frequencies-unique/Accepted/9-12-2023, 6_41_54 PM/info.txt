{"id":1047462496,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1694524314,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/1047462496/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"17.6 MB","code":"class Solution {\npublic:\n\n    int count = 0;\n    int minDeletions(string s) {\n        map<char, int> map;\n        for(auto x : s){\n            map[x] ++;\n        }\n        priority_queue<int> pq;\n        for(const auto x : map){\n            pq.push(x.second);\n        }\n\n        while(pq.size() != 1){\n            auto top = pq.top();\n            pq.pop();\n\n            if(top == pq.top() && top != 0){\n                count ++;\n                pq.push(top - 1);\n            }\n        }\n        return count;\n        \n        \n        \n\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false,"flag_type":1}