{"id":1091149265,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699086428,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1091149265/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root){\n        if(root == NULL){\n            return 0;\n        }\n        \n        if(root->left && root->left->left == NULL && root->left->right == NULL){\n            return root->left->val + helper(root->right);\n        }\n\n        int l = helper(root->left);\n        int r = helper(root->right);\n\n        return l + r;\n    }\n    int sumOfLeftLeaves(TreeNode* root) {\n        return helper(root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}