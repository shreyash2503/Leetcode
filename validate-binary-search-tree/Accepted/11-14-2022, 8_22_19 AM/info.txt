{"id":843002488,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1668394339,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/843002488/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<int> &v)\n    {\n        if(root == NULL) return;\n        helper(root->left, v);\n        v.push_back(root->val);\n        helper(root->right, v);\n    }\n    bool isValidBST(TreeNode* root) {\n        vector<int> v;\n        helper(root, v);\n        int prev = v[0];\n        bool isValid = true;\n        for(int i=1;i<v.size();i++)\n        {\n            if(prev < v[i])\n            {\n                isValid = true;\n            }\n            else\n            {\n                isValid = false;\n                break;\n            }\n            prev = v[i];\n        }\n        return isValid;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}