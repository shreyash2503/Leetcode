{"id":1008678792,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690823112,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1008678792/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"12.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<string> &v, string &temp){\n        if(root == NULL){\n            return;\n        }\n        if(root->left == NULL && root->right == NULL){\n            v.push_back(temp + to_string(root->val));\n            return;\n        }\n        temp += to_string(root->val) + \"->\";\n        string str = temp;\n        helper(root->left, v, temp);\n        helper(root->right, v, str);\n\n    }\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> v;\n        string temp = \"\";\n        helper(root, v, temp);\n        return v;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}