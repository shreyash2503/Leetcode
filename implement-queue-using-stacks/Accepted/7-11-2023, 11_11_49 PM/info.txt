{"id":992035469,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1689097309,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/992035469/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"6.9 MB","code":"class MyQueue {\npublic:\n    stack<int> eq;\n    stack<int> dq;\n    int size;\n    int frontElement;\n    MyQueue() {\n        this->size = 0;\n        this->frontElement = -1;\n        \n    }\n    \n    void push(int x) {\n        eq.push(x);\n        if(frontElement == -1){\n            this->frontElement = x;\n        }\n        this->size ++;\n        \n    }\n    \n    int pop() {\n        if (size == 1){\n            int element = eq.top();\n            eq.pop();\n            this->size --;\n             if(size == 0){\n            frontElement = -1;\n            }\n            return element;\n    \n        }\n        while(!eq.empty()){\n            dq.push(eq.top());\n            eq.pop();\n        }\n        int element = dq.top();\n        dq.pop();\n        this->frontElement = dq.top();\n        while(!dq.empty()){\n            eq.push(dq.top());\n            dq.pop();\n        }\n        this->size --;\n       \n        return element;  \n    }\n    \n    int peek() {\n        return this->frontElement;\n    }\n    \n    bool empty() {\n        return size == 0 ? true : false;\n        \n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}