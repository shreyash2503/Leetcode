{"id":1098792534,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1699981312,"status":10,"status_display":"Accepted","runtime":"294 ms","url":"/submissions/detail/1098792534/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"13.2 MB","code":"class Solution {\npublic:\n    int countPalindromicSubsequence(string s) {\n        vector<int> first = vector(26, -1);\n        vector<int> last = vector(26, -1);\n        \n        for (int i = 0; i < s.size(); i++) {\n            int curr = s[i] - 'a';\n            if (first[curr] == - 1) {\n                first[curr] = i;\n            }\n            \n            last[curr] = i;\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < 26; i++) {\n            if (first[i] == -1) {\n                continue;\n            }\n            \n            unordered_set<char> between;\n            for (int j = first[i] + 1; j < last[i]; j++) {\n                between.insert(s[j]);\n            }\n            \n            ans += between.size();\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-length-3-palindromic-subsequences","has_notes":false,"flag_type":1}