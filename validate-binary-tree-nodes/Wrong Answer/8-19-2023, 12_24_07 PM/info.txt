{"id":1025458942,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1692428047,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1025458942/","is_pending":"Not Pending","title":"Validate Binary Tree Nodes","memory":"N/A","code":"class Solution {\npublic:\n    bool validateBinaryTreeNodes(int n, vector<int>& leftChild, vector<int>& rightChild) {\n        queue<int> q;\n        vector<int> e;\n        q.push(0);\n        int count = 0;\n\n        while(!q.empty()){\n            int ele = q.front();\n            q.pop();\n            if(find(e.begin(), e.end(), ele) != e.end()){\n                return false;\n            }\n           if(leftChild[ele] != -1){\n               if(find(e.begin(), e.end(), leftChild[ele]) != e.end()){\n                   return false;\n               } else {\n                   q.push(leftChild[ele]);\n               }\n           }\n           if(rightChild[ele] != -1){\n               if(find(e.begin(), e.end(), rightChild[ele]) != e.end()){\n                   return false;\n               } else {\n                   q.push(rightChild[ele]);\n               }\n           }\n           e.push_back(ele);\n           count ++;\n        }\n        if(e.size() != count){\n            return false;\n        }\n        \n        return true;\n    }\n};","compare_result":"11101110101111111111111111111111111111111110","title_slug":"validate-binary-tree-nodes","has_notes":false,"flag_type":1}