{"id":829848268,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1666689908,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/829848268/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode* leftTree, TreeNode* rightTree)\n    {\n        if(leftTree == NULL && rightTree == NULL)\n        {\n            return true;\n        }\n        if(leftTree == NULL && rightTree != NULL)\n        {\n            return false;\n        }\n        if(leftTree != NULL && rightTree == NULL)\n        {\n            return false;\n        }\n        if(leftTree->val != rightTree->val)\n        {\n            return false;\n        }\n        return helper(leftTree->left, rightTree->right) && helper(leftTree->right, rightTree->left);\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(root == NULL)\n        {\n            return false;\n        }\n        return helper(root->left, root->right);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}