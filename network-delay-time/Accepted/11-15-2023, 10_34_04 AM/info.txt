{"id":1099149442,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1700024644,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/1099149442/","is_pending":"Not Pending","title":"Network Delay Time","memory":"44.3 MB","code":"class Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        unordered_map<int, vector<pair<int, int>>> map;\n        vector<int> weights(n + 1, INT_MAX);\n        for(auto edge : times){\n            map[edge[0]].push_back({edge[1], edge[2]});\n        }\n\n        weights[k] = 0;\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\n        int cost;\n        pq.push({0, k});\n        while(!pq.empty()){\n            auto front = pq.top(); pq.pop();\n            auto node = front.second;\n            auto weight = front.first;            \n            for(auto& neighbour : map[node]){\n                if(weight + neighbour.second < weights[neighbour.first]){\n                    weights[neighbour.first] = weight + neighbour.second;\n\n                    pq.push({weight + neighbour.second, neighbour.first});\n                }\n            }\n        }\n\n        for(auto i : weights){\n            cout << i << \" \";\n        }\n\n        int ans = *max_element(weights.begin() + 1, weights.end());\n        if(ans == INT_MAX){\n            return -1;\n        }\n\n        return ans;\n    }\n\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}