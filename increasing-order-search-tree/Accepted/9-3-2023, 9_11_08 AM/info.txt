{"id":1039066023,"lang":"dart","lang_name":"Dart","time":"3 months, 4 weeks","timestamp":1693712468,"status":10,"status_display":"Accepted","runtime":"211 ms","url":"/submissions/detail/1039066023/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"143.3 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *   int val;\n *   TreeNode? left;\n *   TreeNode? right;\n *   TreeNode([this.val = 0, this.left, this.right]);\n * }\n */\nclass Solution {\n    void helper(TreeNode? root, List<TreeNode> list){\n        if(root == null){\n            return;\n        }\n        helper(root.left, list);\n        list.add(root);\n        helper(root.right, list);\n\n    }\n\n    TreeNode? increasingBST(TreeNode? root) {\n        List<TreeNode> list = [];\n        helper(root, list);\n        list[0].right = null;\n        list[0].left = null;\n        TreeNode? r = list[0];\n        TreeNode? temp = r;\n        for(int i=1;i<list.length;i++){\n            list[i].left = null;\n            list[i].right = null;\n            temp?.right = list[i];\n            temp = temp?.right;\n        }\n        return r;\n\n\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}