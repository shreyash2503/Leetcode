{"id":1010317814,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690985369,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1010317814/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        if(root == NULL){\n            vector<vector<int>> v;\n            return v;\n        }\n        queue<TreeNode*> q;\n        q.push(root);\n        vector<vector<int>> ans;\n        while(!q.empty()){\n            vector<int> v;\n            int size = q.size();\n            for(int i=0;i<size;i++){\n                TreeNode* temp = q.front();\n                q.pop();\n                if(temp && temp->left){\n                    q.push(temp->left);\n                }\n                if(temp && temp->right){\n                    q.push(temp->right);\n                }\n                if(temp){\n\n                    v.push_back(temp->val);\n                }\n\n            }\n            ans.push_back(v);\n            \n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}