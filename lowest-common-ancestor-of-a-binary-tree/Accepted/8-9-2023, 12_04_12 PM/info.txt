{"id":1016336637,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691562852,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1016336637/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* helper(TreeNode* root, TreeNode* p, TreeNode* q){\n        if(!root){\n            return NULL;\n        }\n        if(root == p || root == q){\n            return root;\n        }\n        TreeNode* l = helper(root->left, p, q);\n        TreeNode* r = helper(root->right, p, q);\n        if(l && r){\n            return root;\n        }\n        if(l){\n            return l;\n        }\n        if(r){\n            return r;\n        }\n        return NULL;\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return helper(root, p, q);\n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}