{"id":826101040,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1666204051,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/826101040/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        queue<TreeNode *> q;\n        vector<vector<int>> v;\n        if(root == NULL)\n        {\n            return v;\n        }\n        vector<int> flag;\n        q.push(root);\n        q.push(NULL);\n        int i = 0;\n        while(!q.empty())\n        {\n            TreeNode *temp = q.front();\n            q.pop();\n            if(temp == NULL)\n            {\n                v.push_back(flag);\n                flag.clear();\n                if(!q.empty())\n                {\n                    q.push(NULL);\n                }\n            }\n            else\n            {\n                flag.push_back(temp->val);\n                if(temp->left)\n                {\n                    q.push(temp->left);\n                }\n                if(temp->right)\n                {\n                    q.push(temp->right);\n                }\n               \n            }\n\n        }\n\n        return v;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}