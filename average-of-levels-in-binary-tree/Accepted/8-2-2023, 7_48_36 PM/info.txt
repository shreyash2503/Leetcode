{"id":1010325039,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690985916,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1010325039/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"23.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n        vector<vector<double>> ans;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int size = q.size();\n            vector<double> v;\n            for(int i=0;i<size;i++){\n                TreeNode* temp = q.front();\n                q.pop();\n                if(temp && temp->left){\n                    q.push(temp->left);\n                }\n                if(temp && temp->right){\n                    q.push(temp->right);\n                }\n                if(temp){\n                    v.push_back(temp->val);\n                }\n            }\n            ans.push_back(v);\n        }\n        vector<double> p;\n        for(const auto& v : ans){\n            double total = 0;\n            int size = v.size();\n            for(const auto& i : v){\n                total += i;\n\n            }\n            p.push_back(total / size);\n            \n\n        }\n        return p;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}