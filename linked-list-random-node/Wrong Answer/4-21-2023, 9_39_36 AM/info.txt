{"id":937229358,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1682050176,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/937229358/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public static List<Integer> list = new ArrayList<>();\n    private static Random r = new Random();\n\n    public Solution(ListNode head) {\n        while(head != null){\n            list.add(head.val);\n            head = head.next;\n        }\n        \n    }\n    \n    public int getRandom() {\n        int size = list.size();\n        int n = r.nextInt(size - 1) + 1;\n        n = size % n;\n        return list.get(n);\n        \n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(head);\n * int param_1 = obj.getRandom();\n */","compare_result":"11010000","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}