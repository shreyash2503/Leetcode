{"id":1097044867,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1699764807,"status":10,"status_display":"Accepted","runtime":"685 ms","url":"/submissions/detail/1097044867/","is_pending":"Not Pending","title":"Bus Routes","memory":"55.7 MB","code":"class Solution {\npublic:\n    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {\n        if(source == target){\n            return 0;\n        }\n        unordered_map<int, vector<int>> adjList;\n\n        for(int i=0;i<routes.size();i++){\n            for(auto stop : routes[i]){\n                adjList[stop].push_back(i);\n            }\n        }\n\n        queue<int> q;\n        unordered_set<int> vis;\n\n        for(auto route : adjList[source]){\n            q.push(route);\n            vis.insert(route);\n        }\n\n        int busCount = 1;\n\n        while(q.size()){\n            int size = q.size();\n            for(int i=0;i<size;i++){\n                int front = q.front(); q.pop();\n\n                for(auto stop : routes[front]){\n                    if(stop == target){\n                        return busCount;\n                    }\n\n                    for(auto route : adjList[stop]){\n                        if(!vis.count(route)){\n                            q.push(route);\n                            vis.insert(route);\n                        }\n                    }\n                }\n            }\n            busCount ++;\n        }\n        \n        return -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"bus-routes","has_notes":false,"flag_type":1}