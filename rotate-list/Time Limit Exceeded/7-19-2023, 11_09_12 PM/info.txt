{"id":998668072,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1689788352,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/998668072/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateList(ListNode* head){\n        ListNode* curr = head;\n        ListNode* temp = head;\n        ListNode* prev = NULL;\n        while(curr->next != NULL){\n            prev = curr;\n            curr = curr->next;\n\n        }\n        if(curr && prev){\n            prev->next = NULL;\n            curr->next = temp;\n        }\n        return curr;\n\n    }\n    void printList(ListNode* head){\n        ListNode* temp = head;\n        while(temp != NULL){\n            cout<<temp->val<<\" \";\n            temp = temp->next;\n        }\n    }\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head == NULL){\n            return NULL;\n        }\n        if(head->next == NULL){\n            return head;\n        }\n        ListNode* temp = head;;\n        for(int i=0;i<k;i++){\n            temp = rotateList(temp);\n        }\n        return temp;\n\n        \n    }\n};","compare_result":"111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list","has_notes":false,"flag_type":1}