{"id":1036575047,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1693462726,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1036575047/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<int> &v){\n        if(root == NULL){\n            return;\n        }\n        helper(root->left, v);\n        v.push_back(root->val);\n        helper(root->right, v);\n        \n        \n    }\n    bool findTarget(TreeNode* root, int k) {\n        vector<int> v;\n        helper(root, v);\n        int i = 0;\n        int j = v.size() - 1;\n        if(v.size() == 1){\n            if(v[0] == k){\n                return true;\n            } else {\n                return false;\n            }\n        }\n        while(i <= j){\n            int sum = v[i] + v[j];\n            if(sum == k){\n                return true;\n            } else if(sum > k){\n                j--;\n            } else {\n                i++;\n            }\n        }\n        return false;\n        \n    }\n};","compare_result":"111110111111111111111111111011101111101111111011111111011011111111110011111010111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111011111111111111111110","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}