{"id":1093492248,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699348784,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1093492248/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, set<string> &v, string s){\n        if(root == NULL){\n            v.insert(s);\n            return;\n        }\n        helper(root->left, v, s + to_string(root->val));\n        helper(root->right, v, s + to_string(root->val));\n\n    }\n    int sumNumbers(TreeNode* root) {\n       set<string> v; \n       helper(root, v, \"\");\n        int sum = 0;\n       for(auto i : v){\n           int element = stoi(i);\n           sum += element;\n       }\n       return sum;\n\n    }\n};","compare_result":"111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}