{"id":1093494252,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699349017,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1093494252/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<string> &v, string s){\n        if(root == NULL){\n            return;\n        }\n        if(root->left == NULL && root->right == NULL){\n            v.push_back(s + to_string(root->val));\n            return;\n        }\n        helper(root->left, v, s + to_string(root->val));\n        helper(root->right, v, s + to_string(root->val));\n\n    }\n    int sumNumbers(TreeNode* root) {\n       vector<string> v; \n       helper(root, v, \"\");\n        int sum = 0;\n       for(auto i : v){\n           cout << i << endl;\n           int element = stoi(i);\n           sum += element;\n       }\n       return sum;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}