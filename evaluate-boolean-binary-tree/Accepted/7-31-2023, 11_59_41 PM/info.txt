{"id":1008753988,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690828181,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1008753988/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"14.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode* root){\n        if(root->left == NULL && root->right == NULL){\n            return root->val;\n        }\n        int left = helper(root->left);\n        int right = helper(root->right);\n        if(root->val == 2){\n            return right || left;\n        }\n        if(root->val == 3){\n            return right && left;\n        }\n        return 1;\n\n    }\n    bool evaluateTree(TreeNode* root) {\n        return helper(root);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}