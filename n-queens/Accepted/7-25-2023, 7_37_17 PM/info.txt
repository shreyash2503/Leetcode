{"id":1003606278,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1690294037,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1003606278/","is_pending":"Not Pending","title":"N-Queens","memory":"10.1 MB","code":"class Solution {\npublic:\n\n    void backtrack(int r, int n, set<int>& col, set<int>& posDia, set<int>& negDia, vector<string>& board, vector<vector<string>>& ans){\n            if(r == n){\n                ans.push_back(board);\n                return;\n            }\n            for(int c=0;c<n;c++){\n                if(col.find(c) != col.end() || posDia.find(r + c) != posDia.end() || negDia.find(r - c) != negDia.end()){\n                    continue;\n                }\n                col.insert(c);\n                posDia.insert(r + c);\n                negDia.insert(r - c);\n                board[r][c] = 'Q';\n\n                backtrack(r + 1, n, col, posDia, negDia, board, ans);\n\n                col.erase(c);\n                posDia.erase(r + c);\n                negDia.erase(r - c);\n                board[r][c] = '.';\n            }\n        }\n\n    vector<vector<string>> solveNQueens(int n) {\n        set<int> col;\n        set<int> posDia;\n        set<int> negDia;\n        string s(n, '.');\n\n        vector<vector<string>> ans;\n        vector<string> board;\n        for(int i=0;i<n;i++){\n            board.push_back(s);\n        }\n        backtrack(0, n, col, posDia, negDia, board, ans);\n\n        return ans;\n\n\n        \n    }\n};\n","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}