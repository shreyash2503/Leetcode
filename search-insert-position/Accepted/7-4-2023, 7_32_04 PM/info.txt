{"id":986157827,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1688479324,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/986157827/","is_pending":"Not Pending","title":"Search Insert Position","memory":"9.5 MB","code":"class Solution {\npublic:\n    int helper(vector<int>& nums, int target){\n        int start = 0;\n        int end = nums.size() - 1;\n        int mid = -1;\n        while(start <= end){\n            mid = start + (end - start) / 2;\n            if (nums[mid] < target){\n                start = mid + 1;\n            } else if(nums[mid] == target){\n                return mid;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return -1;\n    }\n    int searchInsert(vector<int>& nums, int target) {\n        int index = helper(nums, target);\n        if(index != -1){\n            return index;\n        } \n        for(int i=0;i<nums.size();i++){\n            if(nums[i] > target){\n                return i;\n            }\n            if(i == nums.size() - 1){\n                return i + 1;\n            }\n        }\n        return -1;\n    \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}