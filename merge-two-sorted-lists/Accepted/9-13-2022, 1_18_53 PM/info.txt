{"id":798615506,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1663055333,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/798615506/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* a, ListNode* b) {\n        if(a == NULL) return b;\n        if(b == NULL) return a;\n        ListNode* finalHead = NULL;\n        if(a->val > b->val)\n        {\n            finalHead = b;\n            b = b->next;\n        }\n        else\n        {\n            finalHead = a;\n            a = a->next;\n        }\n        ListNode* finalTail = finalHead;\n        while(a && b)\n        {\n            if(a->val > b->val)\n            {\n                finalTail->next = b;\n                b = b->next;\n            }\n            else\n            {\n                finalTail->next = a;\n                a = a->next;\n            }\n            finalTail = finalTail->next;\n        }\n        if(a == NULL)\n        {\n            finalTail->next = b;\n        }\n        else\n        {\n            finalTail->next = a;\n        }\n        return finalHead;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}