{"id":1091167777,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699089141,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1091167777/","is_pending":"Not Pending","title":"Same Tree","memory":"10.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    bool helper(TreeNode* p, TreeNode* q){\n        if(p == NULL && q == NULL){\n            return true;\n        }\n        if(!p && q){\n            return false;\n        }\n        if(p && !q){\n            return false;\n        }\n        if(p->val != q->val){\n            return false;\n        }\n\n        bool l = helper(p->left, q->left);\n        bool r = helper(p->right, q->right);\n        if(l && r){\n            return true;\n        }\n        return false;\n\n\n    }\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n\n        return helper(p, q);\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}