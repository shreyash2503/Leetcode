{"id":1131363913,"lang":"cpp","lang_name":"C++","time":"1 day, 16 hours","timestamp":1703852477,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1131363913/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int ans = 1;\n        size_t size = nums.size();\n        vector<int> dp(size, 1);\n        for(size_t i=0;i<size;i++){\n            for(size_t j=0;j<i;j++){\n                if(nums[i] > nums[j]){\n                    dp[i] = max(dp[i], dp[j] + 1), ans = max(ans, dp[i]);\n                }\n            }\n        }\n\n        return dp[size - 1];\n        \n    }\n};","compare_result":"1111111111111110111111110011110111110010000000000010001","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}