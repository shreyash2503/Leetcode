{"id":1115442698,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1702092566,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1115442698/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int> &v){\n        if(root == NULL){\n            return;\n        }\n\n        inorder(root->left, v);\n        v.push_back(root->val);\n        inorder(root->right, v);\n    }\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> v;\n        inorder(root, v);\n\n        return v;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}