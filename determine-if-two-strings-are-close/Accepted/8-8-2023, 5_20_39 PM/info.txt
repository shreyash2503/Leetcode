{"id":1015593438,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691495439,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/1015593438/","is_pending":"Not Pending","title":"Determine if Two Strings Are Close","memory":"20.9 MB","code":"class Solution {\npublic:\n    bool closeStrings(string word1, string word2) {\n        if(word1.size() != word2.size()){\n            return false;\n        }\n        string m, n;\n        unordered_map <char, int> map1;\n        unordered_map<int, string> w1;\n\n\n\n        unordered_map <char, int> map2;\n        unordered_map <int, string> w2;\n\n        for(const auto& i : word1){\n            if(map1.find(i) == map1.end()){\n                map1[i] = 1;\n            } else {\n                map1[i] ++;\n            }\n        }\n        for(auto it : map1){\n            w1[it.second].push_back(it.first);\n        }\n\n\n\n        for(const auto& i : word2){\n            if(map2.find(i) == map2.end()){\n                map2[i] = 1;\n            } else {\n                map2[i] ++;\n            }\n        }\n\n        for(auto it : map2){\n            w2[it.second].push_back(it.first);\n        }\n        if(w1.size() != w2.size()) return false;\n\n        for(auto it : map1){\n            m += it.first;\n        }\n        for(auto it : map2){\n            n += it.first;\n        }\n        sort(m.begin(), m.end());\n        sort(n.begin(), n.end());\n\n        if(m != n) return false;\n\n        for(auto it : w1){\n            if(w2[it.first].size() != it.second.size()) return false;\n        }\n        return true;\n\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-if-two-strings-are-close","has_notes":false,"flag_type":1}