{"id":937225495,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1682049436,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/937225495/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* slow = head;\n        ListNode* fast = head->next;\n        while(fast != nullptr && fast->next != nullptr){\n            fast = fast->next->next;\n            slow = slow->next;\n        }\n        if(fast == nullptr){\n            return slow;\n        }else{\n            return slow->next;\n        }\n\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}