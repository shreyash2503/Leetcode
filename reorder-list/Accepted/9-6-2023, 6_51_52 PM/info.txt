{"id":1042139621,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1694006512,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1042139621/","is_pending":"Not Pending","title":"Reorder List","memory":"18.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        stack<ListNode*> s;\n        int size = 0;\n        ListNode* temp = head;\n        while(temp != NULL){\n            s.push(temp);\n            size++;\n            temp = temp->next;\n        }\n        temp = head;\n        for(int i=0;i<size / 2;i++){\n            ListNode* _temp = s.top();\n            s.pop();\n            _temp->next = NULL;\n            ListNode* next = temp->next;\n            temp->next = _temp;\n            _temp->next = next;\n            temp = next;\n        }\n        temp->next = NULL;\n\n        \n    }\n};","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false,"flag_type":1}