{"id":996938486,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1689618012,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/996938486/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        if(root == NULL) {\n            vector<vector<int>> v;\n            return v;\n        };\n       \n        vector<vector<int>> v;\n        queue<TreeNode*> q;\n        q.push(root);\n        int flag = 0;\n        while(!q.empty()){\n            vector<int>_v(q.size());\n            int size = q.size();\n            for(int i=0;i<size;i++){\n                TreeNode* temp = q.front();\n                q.pop();\n                if(temp->left) q.push(temp->left);\n                if(temp->right) q.push(temp->right);\n                int idx = flag == 0 ? i : size - 1 - i;\n                _v[idx] = temp->val;\n            }\n            v.push_back(_v);\n            flag = 1 - flag;\n\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}