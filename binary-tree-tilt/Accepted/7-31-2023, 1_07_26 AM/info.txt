{"id":1007977578,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690745846,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1007977578/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root, vector<int>& v){\n        if(root == NULL){\n            return 0;\n        }\n        int left = helper(root->left, v);\n        int right = helper(root->right, v);\n        v.push_back(abs(left - right));\n        return root->val + left + right;\n        \n\n    }\n    int findTilt(TreeNode* root) {\n        vector<int> v;\n        helper(root, v);\n        int sum = 0;\n        for(int i=0;i<v.size();i++){\n            cout<<v[i];\n            sum += v[i];\n        }\n\n        return sum;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}