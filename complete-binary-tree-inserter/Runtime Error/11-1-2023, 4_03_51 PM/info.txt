{"id":1089033765,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1698834831,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1089033765/","is_pending":"Not Pending","title":"Complete Binary Tree Inserter","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass CBTInserter {\npublic:\n    vector<TreeNode*> v;\n    TreeNode* root;\n    int size = 0;\n    CBTInserter(TreeNode* root) {\n        this->v = vector<TreeNode*>(1001, NULL);\n        this->root = root;\n        traverse(root, 0);\n    }\n\n\n    void traverse(TreeNode* root, int start){\n        if(root == NULL){\n            return;\n        }\n        v[start] = root;\n        this->size ++;\n        traverse(root->left, 2 * start + 1);\n        traverse(root->right, 2 * start + 2);\n\n    }\n    \n    int insert(int val) {\n        TreeNode* node = new TreeNode(val);\n        v[size] = node;\n        int parent = (size - 1) / 2;\n        this->size ++;\n        TreeNode* _parent = v[parent];\n        if(_parent){\n            if(_parent->left == NULL){\n                _parent->left = node;\n            } else {\n                _parent->right = node;\n            }\n            return _parent->val;\n        }\n\n        return -1;\n\n\n        \n    }\n    \n    TreeNode* get_root() {\n        return this->root;\n        \n    }\n};\n\n/**\n * Your CBTInserter object will be instantiated and called as such:\n * CBTInserter* obj = new CBTInserter(root);\n * int param_1 = obj->insert(val);\n * TreeNode* param_2 = obj->get_root();\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"complete-binary-tree-inserter","has_notes":false,"flag_type":1}