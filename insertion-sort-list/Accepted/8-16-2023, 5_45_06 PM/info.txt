{"id":1022972636,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1692188106,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/1022972636/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"9.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertionSortList(ListNode* head) {\n        ListNode* temp = head;\n        ListNode* next = NULL;\n        int count = 0;\n        while(temp != NULL){\n            ListNode* i = temp;\n            next = temp->next;\n            int j = count;\n            int swap = count;\n            while(next != NULL){\n                if(next->val < i->val){\n                    i = next;\n                    swap = j;\n                }\n                next = next->next;\n                j++;\n\n            }\n            int flag = temp->val;\n            temp->val = i->val;\n            i->val = flag;\n            count++;\n            temp = temp->next;\n\n        }\n\n        return head;\n        \n    }\n};","compare_result":"1111111111111111111","title_slug":"insertion-sort-list","has_notes":false,"flag_type":1}