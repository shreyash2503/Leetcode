{"id":1021947073,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1692094812,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1021947073/","is_pending":"Not Pending","title":"Partition List","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode* less = new ListNode(0);\n        ListNode* greater = new ListNode(0);\n        ListNode* temp_less = less;\n        ListNode* temp_greater = greater;\n        while(head != NULL){\n            if(head->val < x){\n                temp_less->next = head;\n                temp_less = temp_less->next;\n            } else {\n                temp_greater->next = head;\n                temp_greater = temp_greater->next;\n            }\n            head = head->next;\n           \n        }\n        temp_greater->next = NULL;\n        temp_less->next = greater->next;\n\n        return less->next;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}