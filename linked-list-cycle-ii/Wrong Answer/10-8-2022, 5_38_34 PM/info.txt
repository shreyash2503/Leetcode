{"id":817838886,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1665230914,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/817838886/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *fast = head, *slow = head;\n        while(fast && fast->next)\n        {\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast)\n            {\n                return slow->next;\n            }\n        }\n        return NULL;\n        \n    }\n};","compare_result":"10111101010001100","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}