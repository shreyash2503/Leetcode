{"id":1096456495,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1699695291,"status":10,"status_display":"Accepted","runtime":"361 ms","url":"/submissions/detail/1096456495/","is_pending":"Not Pending","title":"Restore the Array From Adjacent Pairs","memory":"149.2 MB","code":"class Solution {\npublic:\n    unordered_map<int, vector<int>> graph;\n    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {\n        for(auto pair : adjacentPairs){\n            graph[pair[0]].push_back(pair[1]);\n            graph[pair[1]].push_back(pair[0]);\n        }\n\n        int root = 0;\n        for(auto const& pair : graph){\n            if(pair.second.size() == 1){\n                root = pair.first;\n                break;\n            }\n        }\n        vector<int> ans;\n        dfs(root, INT_MAX, ans);\n        return ans;\n\n\n        \n    }\n    void dfs(int root, int prev, vector<int> &ans) {\n        ans.push_back(root);\n        for(auto neighbour : graph[root]){\n            if(neighbour != prev){\n                dfs(neighbour, root, ans);\n            }\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"restore-the-array-from-adjacent-pairs","has_notes":false,"flag_type":1}