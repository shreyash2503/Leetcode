{"id":1096040612,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1699635784,"status":10,"status_display":"Accepted","runtime":"379 ms","url":"/submissions/detail/1096040612/","is_pending":"Not Pending","title":"Restore the Array From Adjacent Pairs","memory":"140.9 MB","code":"class Solution {\npublic:\n    unordered_map<int, vector<int>> graph;\n    \n    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {\n        for (auto& edge : adjacentPairs) {\n            graph[edge[0]].push_back(edge[1]);\n            graph[edge[1]].push_back(edge[0]);\n        }\n        \n        int root = 0;\n        for (auto& pair : graph) {\n            if (pair.second.size() == 1) {\n                root = pair.first;\n                break;\n            }\n        }\n        \n        vector<int> ans;\n        dfs(root, INT_MAX, ans);\n        return ans;\n    }\n    \n    void dfs(int node, int prev, vector<int>& ans) {\n        ans.push_back(node);\n        for (int neighbor : graph[node]) {\n            if (neighbor != prev) {\n                dfs(neighbor, node, ans);\n            }\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"restore-the-array-from-adjacent-pairs","has_notes":false,"flag_type":1}