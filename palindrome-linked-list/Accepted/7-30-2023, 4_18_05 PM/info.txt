{"id":1007634932,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690714085,"status":10,"status_display":"Accepted","runtime":"174 ms","url":"/submissions/detail/1007634932/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"120.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        ListNode* flag = head;\n        ListNode* prev = NULL;\n        ListNode* curr = head;\n        vector<int> v;\n        while(curr != NULL){\n            v.push_back(curr->val);\n            ListNode* temp = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = temp;\n        }\n        int i = 0;\n\n        while(prev != NULL){\n            cout<<v[i];\n            if(prev->val != v[i]){\n                return false;\n            }\n            prev = prev->next;\n            i++;\n        }\n\n        return true;\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}