{"id":1029363178,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1692778628,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1029363178/","is_pending":"Not Pending","title":"Reorganize String","memory":"6.3 MB","code":"class Solution {\npublic:\n    string reorganizeString(string s) {\n        unordered_map<char, int> map;\n        for(int i=0;i<s.size();i++){\n            if(map.find(s[i]) == map.end()){\n                map[s[i]] = 1;\n            } else {\n                map[s[i]]++;\n            }\n        }\n        priority_queue<pair<int, char>> max_heap;\n        for(auto &[ch, freq] : map){\n            max_heap.push({freq, ch});\n        }\n\n        string res;\n        while(max_heap.size() >= 2) {\n            auto [freq1, ch1] = max_heap.top();\n            max_heap.pop();\n            auto [freq2, ch2] = max_heap.top();\n            max_heap.pop();\n\n            res += ch1;\n            res += ch2;\n            if(--freq1 > 0) max_heap.push({freq1, ch1});\n            if(--freq2 > 0) max_heap.push({freq2, ch2});\n        }\n\n        if(!max_heap.empty()){\n            auto [freq, ch] = max_heap.top();\n            if(freq > 1) return \"\";\n            res += ch;\n        }\n        return res;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string","has_notes":false,"flag_type":1}