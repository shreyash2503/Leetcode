{"id":1039032576,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1693710657,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1039032576/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode* root, TreeNode* subRoot){\n        if(root == NULL){\n            return false;\n\n        }\n        if(root->val == subRoot->val){\n            if(root->left == NULL && root->right== NULL){\n                if(subRoot->left == NULL && root->right == NULL){\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            return helper(root->right, subRoot->right) && helper(root->left, subRoot->left);\n            \n        }\n        int l = helper(root->left, subRoot);\n        int r = helper(root->right, subRoot);\n        if(l == true){\n            return true;\n        }\n        if(r == true){\n            return true;\n        }\n        return false;\n    }\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        return helper(root, subRoot);\n\n        \n    }\n};","compare_result":"11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}