{"id":1009348764,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690892291,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1009348764/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"12.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        set<int> s;\n        ListNode* curr = head;\n        ListNode* prev = NULL;\n        while(curr != NULL){\n            if(s.find(curr->val) == s.end()){\n                s.insert(curr->val);\n            } else {\n                ListNode* temp = prev->next->next;\n                curr->next = NULL;\n                prev->next = temp;\n                curr = temp;\n                continue;\n            }\n            prev = curr;\n            curr = curr->next;\n        }\n        return head;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list","has_notes":false,"flag_type":1}