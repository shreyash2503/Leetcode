{"id":817830071,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1665229771,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/817830071/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *slow = head, *fast = head;\n        while (fast && fast->next) {\n            slow = slow->next;\n            fast = fast->next->next;\n            if (slow == fast) return true;\n        }\n        \n        return false;\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}