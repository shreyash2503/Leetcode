{"id":1040527323,"lang":"cpp","lang_name":"C++","time":"3Â months, 3Â weeks","timestamp":1693849185,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1040527323/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n        ListNode* curr = list1;\n        ListNode* prev = NULL;\n        ListNode* _a = NULL;\n        ListNode* _b = NULL;\n\n        ListNode* _curr = list2;\n        ListNode* _prev = NULL;\n        while(_curr != NULL){\n            _prev = _curr;\n            _curr = _curr->next;\n        }\n        \n        while(curr != NULL){\n            if(curr->val == a){\n                _a = prev;\n            }\n            if(curr->val == b){\n                _b = curr->next;\n                curr->next = NULL;\n                break;\n            }\n            prev = curr;\n            curr = curr->next;\n        }\n\n        _a->next = list2;\n        _prev->next = _b;\n\n        return list1;\n\n        \n    }\n};","compare_result":"1111110111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists","has_notes":false,"flag_type":1}