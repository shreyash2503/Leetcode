{"id":1040510621,"lang":"cpp","lang_name":"C++","time":"3Â months, 3Â weeks","timestamp":1693848136,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1040510621/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"32.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: \n    bool isSamePath(TreeNode* root, ListNode* head){\n        if(root == NULL && head != NULL){\n            return false;\n        }\n        if(root == NULL && head == NULL){\n            return true;\n        }\n        if(head == NULL){\n            return true;\n        }\n        return (head->val == root->val) && (isSamePath(root->left, head->next) || isSamePath(root->right, head->next));\n    }\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        if(root == NULL){\n            return false;\n        }\n        if(isSamePath(root, head)){\n            return true;\n        }\n        return isSubPath(head, root->left) || isSubPath(head, root->right);\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree","has_notes":false,"flag_type":1}