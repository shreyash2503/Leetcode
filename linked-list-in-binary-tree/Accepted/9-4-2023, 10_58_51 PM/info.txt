{"id":1040516862,"lang":"dart","lang_name":"Dart","time":"3 months, 3 weeks","timestamp":1693848531,"status":10,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/1040516862/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"148.6 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *   int val;\n *   ListNode? next;\n *   ListNode([this.val = 0, this.next]);\n * }\n */\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *   int val;\n *   TreeNode? left;\n *   TreeNode? right;\n *   TreeNode([this.val = 0, this.left, this.right]);\n * }\n */\nclass Solution {\n  bool isSamePath(ListNode? head, TreeNode? root){\n    if(root == null && head != null){\n        return false;\n    }\n    if(root == null && head == null){\n        return true;\n    }\n    if(head == null){\n        return true;\n    }\n    return (head?.val == root?.val) && (isSamePath(head?.next, root?.left) || isSamePath(head?.next, root?.right));\n  }\n  bool isSubPath(ListNode? head, TreeNode? root) {\n      if(root == null){\n        return false;\n      }\n      if(isSamePath(head, root)){\n        return true;\n      }\n      return isSubPath(head, root?.left) || isSubPath(head, root?.right);\n\n  }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree","has_notes":false,"flag_type":1}