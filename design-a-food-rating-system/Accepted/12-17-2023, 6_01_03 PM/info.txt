{"id":1121779412,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1702816263,"status":10,"status_display":"Accepted","runtime":"367 ms","url":"/submissions/detail/1121779412/","is_pending":"Not Pending","title":"Design a Food Rating System","memory":"155.7 MB","code":"class FoodRatings {\npublic:\n    unordered_map<string, set<pair<int, string>>> rated;\n    unordered_map<string, pair<int, string>> mp; \n    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {\n        size_t n = foods.size();\n        for(size_t i{};i<n;i++){\n            string food = foods[i];\n            string cuisine = cuisines[i];\n            int rating = ratings[i];\n            mp[food] = {-rating, cuisine};\n            rated[cuisine].insert({-rating, food});\n        }\n    }\n    \n    void changeRating(string food, int newRating) {\n        string& cuisine = mp[food].second;\n        int inverseRating = mp[food].first;\n        rated[cuisine].erase({inverseRating, food});\n        rated[cuisine].insert({-newRating, food});\n        mp[food] = {-newRating, cuisine};\n\n        \n    }\n    \n    string highestRated(string cuisine) {\n        return rated[cuisine].begin()->second;\n    }\n};\n\n/**\n * Your FoodRatings object will be instantiated and called as such:\n * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);\n * obj->changeRating(food,newRating);\n * string param_2 = obj->highestRated(cuisine);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-a-food-rating-system","has_notes":false,"flag_type":1}