{"id":842997264,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1668393563,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/842997264/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<int> &min)\n    {\n        if(root == NULL) return;\n        helper(root->left, min);\n        min.push_back(root->val);\n        helper(root->right, min);\n    }\n    int minDiffInBST(TreeNode* root) {\n        vector<int> min;\n        helper(root, min);\n        int min1 = INT_MAX;\n        for(int i=0;i<min.size();i++)\n        {\n            for(int j=0;j<min.size();j++)\n            {\n                if(i != j)\n                {\n                if(min1 > abs(min[i] - min[j]))\n                {\n                    min1 = abs(min[i] - min[j]);\n                }\n\n                }\n                \n            }\n        }\n        return min1;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}