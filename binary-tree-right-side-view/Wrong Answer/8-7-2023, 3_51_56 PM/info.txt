{"id":1014583436,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691403716,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1014583436/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<int>& arr){\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            TreeNode* temp = q.front();\n            q.pop();\n            if(temp && temp->right){\n                q.push(temp->right);\n            }\n            if(temp){\n                arr.push_back(temp->val);\n            }\n        }\n    }\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> arr;\n        helper(root, arr);\n        return arr;\n\n        \n    }\n};","compare_result":"111101000100100010000000000011001100000100000000000010000000010000001100000001000000010000000000000000000100000010000000000000000000000000001000000110010110100001001000000011000100010000010000010000000000000000000001","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}