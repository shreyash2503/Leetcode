{"id":1013531185,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691297726,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1013531185/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"34.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* helper(TreeNode* root1, TreeNode* root2){\n        if(root1 == NULL && root2 == NULL){\n            return NULL;\n        }\n        if(root2 == NULL){\n            TreeNode* temp = new TreeNode(root1->val);\n            temp->left = helper(root1->left, NULL);\n            temp->right = helper(root1->right, NULL);\n            return temp;\n            \n        }\n        if(root1 == NULL){\n            TreeNode* temp = new TreeNode(root2->val);\n            temp->left = helper(NULL, root2->left);\n            temp->right = helper(NULL, root2->right);\n            return temp;\n        }\n        TreeNode* temp = new TreeNode(root1->val + root2->val);\n        temp->left = helper(root1->left, root2->left);\n        temp->right = helper(root1->right, root2->right);\n        return temp;\n    }\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        return helper(root1, root2);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false,"flag_type":1}