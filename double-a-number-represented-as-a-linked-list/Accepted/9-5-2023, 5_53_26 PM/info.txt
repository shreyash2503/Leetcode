{"id":1041186158,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1693916606,"status":10,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/1041186158/","is_pending":"Not Pending","title":"Double a Number Represented as a Linked List","memory":"138 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* doubleIt(ListNode* head) {\n\n        ListNode* temp = head;\n        vector<int> v;\n        while(temp != NULL){\n            v.push_back(temp->val);\n            temp = temp->next;\n        }\n        int carry = 0;\n        for(int i=v.size()-1;i>=0;i--){\n            int _temp = 2 * v[i] + carry;\n            if(_temp / 10 >= 1){\n                carry = _temp / 10;\n                v[i] = _temp % 10;\n            } else {\n                carry = 0;\n                v[i] = _temp;\n            }\n        }\n        ListNode* newHead = NULL;\n        ListNode* newTail = NULL;\n        if(carry == 0){\n            for(auto i : v){\n                if(newHead == NULL && newTail == NULL){\n                    newHead = new ListNode(i);\n                    newTail = newHead;\n                } else {\n                    newTail->next = new ListNode(i);\n                    newTail = newTail->next;\n                }\n            }\n        } else {\n            newHead = new ListNode(carry);\n            newTail = newHead;\n            for(auto i : v){\n                newTail->next = new ListNode(i);\n                newTail = newTail->next;\n            }\n        }\n\n        return newHead;\n        \n    }\n};","compare_resulttitle_slug":"double-a-number-represented-as-a-linked-list","has_notes":false,"flag_type":1}