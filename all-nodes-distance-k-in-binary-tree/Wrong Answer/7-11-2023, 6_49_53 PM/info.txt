{"id":991840695,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1689081593,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/991840695/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool findHeight(TreeNode* root, int target, bool hash, int* height){\n        if(root == NULL){\n            return false;\n        }\n        if(root->val == target){\n            return true;\n        }\n        if(findHeight(root->left, target, hash, height)){\n            *height = *height + 1;\n            return true;\n        }\n        if(findHeight(root->right, target, hash, height)){\n            *height = *height + 1;\n            return true;\n        }\n        return false;\n    }\n    void helper(TreeNode* root, vector<int> &ans, int k, int distance){\n        if(root == NULL){\n            return;\n        }\n        if(distance == k){\n            ans.push_back(root->val);\n            return;\n        }\n        helper(root->left, ans, k, distance + 1);\n        helper(root->right, ans, k, distance + 1);\n\n\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        TreeNode* temp = root;\n        vector<int> ans;\n        int* height = new int;\n        *height = 1;\n        TreeNode* flag = target;\n        bool hash1 = findHeight(temp->left, target->val, false, height);\n        bool hash2 = findHeight(temp->right, target->val, false, height);\n        cout<<hash1<<hash2<<endl;\n        if(hash1){\n            if(*height > k){\n                TreeNode* a = root;\n                helper(flag, ans, k, 0);\n                int diff = *height - k;\n                cout<<\"The height is ::\"<<*height<<endl;\n                helper(a->left, ans, diff, 1);\n\n            } else {\n                cout<<\"Hey buddy\";\n                TreeNode* a = root;\n                helper(flag, ans, k, 0);\n                int diff = k - *height;\n                cout<<a->val<<endl;\n                cout<<diff<<endl;\n                helper(a->right, ans, diff, 1);\n                \n            }\n        } else {\n            if(*height > k){\n                TreeNode* a = root;\n                helper(flag, ans, k, 0);\n                int diff = *height - k;\n                helper(a->right, ans, diff, 1);\n\n            } else {\n                TreeNode* a = root;\n                helper(flag, ans, k, 0);\n                int diff = k - *height;\n                helper(a->left, ans, diff, 1);\n                \n            }\n\n        }\n        return ans;\n\n        \n\n        \n    }\n};","compare_result":"111111101010001001110000110000001001010010100100110101101","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}