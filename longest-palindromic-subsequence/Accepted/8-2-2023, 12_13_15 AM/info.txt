{"id":1009658035,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690915395,"status":10,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/1009658035/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"10.7 MB","code":"class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        string t = s;\n        reverse(t.begin(), t.end());\n        int m = t.size();\n        int n = s.size();\n        int dp[m + 1][n + 1];\n\n        for(int i=0;i<=m;i++){\n            for(int j=0;j<=n;j++){\n                dp[i][j] = 0;\n            }\n        }\n\n        for(int i=0;i<=m;i++){\n            for(int j=0;j<=n;j++){\n                if(i == 0 || j == 0){\n                    dp[i][j] = 0;\n                } else if(s[i - 1] == t[j - 1]){\n                    dp[i][j] = 1 + dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return dp[m][n];\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}