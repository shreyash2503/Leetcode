{"id":936759899,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1681972765,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936759899/","is_pending":"Not Pending","title":"Design Linked List","memory":"N/A","code":"class Node{\n    public:\n    int val;\n    Node* next;\n    Node(int val){\n        this->val = val;\n        this->next = NULL;\n    }\n\n};\n\n\nclass MyLinkedList {\npublic:\n   Node* head;\n   int size;\n    MyLinkedList() {\n        this->head = NULL;\n        this->size = 0;\n    }\n    \n    int get(int index) {\n        if(index < 0)  return -1;\n        if(index > size) return -1;\n        Node* current = this->head;\n        int count = index;\n        for(int i=0;i<index;i++){\n            if(current && current->next){\n                current = current->next;\n            }\n        }\n        return current->val;\n    }\n    \n    void addAtHead(int val) {\n        Node* newHead = new Node(val);\n        this->head = newHead;\n        this->size ++ ;\n    }\n    \n    void addAtTail(int val) {\n        Node* current = this->head;\n        for(int i=0;i<this->size - 1;i++){\n            if(current && current->next){\n                current = current->next;\n            }\n        }\n        Node* newTail = new Node(val);\n        current->next = newTail;\n        this->size++;\n\n        \n    }\n    \n    void addAtIndex(int index, int val) {\n        if(index < 0 || index >= size){\n            return;\n        }\n        Node* current = this->head;\n        for(int i=0;i<index - 1;i++){\n            if(current && current->next){\n                 current = current->next;\n            }\n        }\n        Node* newNode = new Node(val);\n        Node* flag = current->next;\n        newNode->next = flag;\n        current->next = newNode;\n        this->size++;\n    }\n    \n    void deleteAtIndex(int index) {\n        if(index < 0){\n            return;\n        }\n        if(index == 0){\n            Node* flag = this->head->next;\n            this->head->next = NULL;\n            delete head;\n            this->head = flag;\n            return;\n        }\n        Node* current = this->head;\n        for(int i=0;i<index-1;i++){\n            current = current->next;\n        }\n        if(current && current->next){\n             Node* flag = current->next->next;\n            Node* temp = current->next;\n            temp->next = NULL;\n            current->next = flag;\n            delete temp;\n        }\n       \n    }\n    ~MyLinkedList(){\n        Node* p = this->head;\n        while(head != NULL){\n            head = head->next;\n            delete p;\n            p = head;\n        }\n    }\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList* obj = new MyLinkedList();\n * int param_1 = obj->get(index);\n * obj->addAtHead(val);\n * obj->addAtTail(val);\n * obj->addAtIndex(index,val);\n * obj->deleteAtIndex(index);\n */","compare_result":"1110110000000000000000000000000000000000000000000000000000000000","title_slug":"design-linked-list","has_notes":false,"flag_type":1}