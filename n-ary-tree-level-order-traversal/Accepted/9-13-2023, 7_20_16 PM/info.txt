{"id":1048412433,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1694613016,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1048412433/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"12.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> children;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n    }\n\n    Node(int _val, vector<Node*> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(Node* root) {\n        if(root == NULL) return {};\n\n        queue<Node*> q;\n        Node* temp = root;\n        vector<vector<int>> p;\n        q.push(temp);\n        vector<int> v;\n        p.push_back({temp->val});\n        while(!q.empty()){\n            int size = q.size();\n            for(int i=0;i<size;i++){\n                auto front = q.front();\n                q.pop();\n                for(int j=0;j<front->children.size();j++){\n                    v.push_back(front->children[j]->val);\n                    q.push(front->children[j]);\n                }\n            }\n            if(v.size() != 0){\n                p.push_back(v);\n                v.clear();\n            }\n\n        }\n\n        return p;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal","has_notes":false,"flag_type":1}