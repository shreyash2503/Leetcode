{"id":1041773807,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1693971757,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1041773807/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapNodes(ListNode* head, int k) {\n        int size = 0;\n        ListNode* temp = head;\n        while(temp != NULL){\n            size ++;\n            temp = temp->next;\n        }\n        int count = 0;\n        int end = size + 1 - k;\n        temp = head;\n        ListNode* first = NULL;\n        ListNode* second = NULL;\n        while(temp != NULL){\n            count ++;\n            if(count == k){\n                first = temp;\n            }\n            if(count == end){\n                second = temp;\n                break;\n            }\n            temp = temp->next;\n\n        }\n        if(first != NULL && second != NULL){\n            swap(first->val, second->val);\n        }\n        return head;\n\n        \n    }\n};","compare_result":"111111011101000011110000011101001101110000111100101100011000101100000011100111101110110110011101100011001111000110101001001100000010","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"flag_type":1}