{"id":1093709545,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699372253,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1093709545/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, set<int> &s){\n        if(root == NULL){\n            return;\n        }\n        s.insert(root->val);\n        helper(root->left, s);\n        helper(root->right, s);\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        set<int> s;\n        helper(root, s);\n        int len = s.size();\n        if(len > 1){\n            auto p = s.begin();\n            return *(++p);\n        }\n\n        return -1;\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}