{"id":1039019014,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1693709936,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1039019014/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode* root, int value){\n        if(root == NULL){\n            return true;\n        }\n        if(root->val == value){\n            return helper(root->left, value) && helper(root->right, value);\n        }\n        return false;\n    }\n    bool isUnivalTree(TreeNode* root) {\n        int value = root->val;\n        return helper(root, value);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}