{"id":1096732857,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1699725763,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1096732857/","is_pending":"Not Pending","title":"Design Graph With Shortest Path Calculator","memory":"N/A","code":"class Graph {\npublic:\n    vector<vector<pair<int, int>>> adjList;\n    int n;\n    Graph(int n, vector<vector<int>>& edges) {\n        // this->adjList = vector<vector<pair<int, int>>>(n);\n        adjList.resize(n);\n        this->n = n;\n        \n        for(auto &edge : edges){\n            adjList[edge[0]].push_back({edge[1], edge[2]});\n        }\n    }\n    \n    void addEdge(vector<int> edge) {\n        adjList[edge[0]].push_back({edge[1], edge[2]});\n        \n    }\n    \n    int shortestPath(int node1, int node2) {\n        vector<int> weight(n, INT_MAX);\n        priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>>> pq;\n        weight[node1] = 0;\n        pq.push({node1, 0});\n\n        while(!pq.empty()){\n            int currNode = pq.top()[0];\n            int currCost = pq.top()[1];\n            pq.pop();\n\n            if(currCost > weight[currNode]){\n                continue;\n            }\n            if(currNode == node2){\n                return currCost;\n            }\n            for(auto& edge : adjList[currNode]){\n                int neighbour = edge.first;\n                int cost = edge.second;\n                if(currCost + cost < weight[neighbour]){\n                    weight[neighbour] = currCost + cost;\n                    pq.push({neighbour, currCost + cost});\n                }\n            }\n        }\n\n\n        return -1;\n\n        \n    }\n};\n\n/**\n * Your Graph object will be instantiated and called as such:\n * Graph* obj = new Graph(n, edges);\n * obj->addEdge(edge);\n * int param_2 = obj->shortestPath(node1,node2);\n */","compare_result":"100010000000000000000000000000000000","title_slug":"design-graph-with-shortest-path-calculator","has_notes":false,"flag_type":1}