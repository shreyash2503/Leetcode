{"id":843058481,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1668402278,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/843058481/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* helper(vector<int>&nums, int s, int e)\n    {\n        if(s > e) return NULL;\n        int middle = (s+e)/2;\n        TreeNode* root = new TreeNode(nums[middle]);\n        root->left = helper(nums, s, middle-1);\n        root->right = helper(nums, middle+1, e);\n        return root;\n\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n         return helper(nums, 0, nums.size()-1);\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}