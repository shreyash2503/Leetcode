{"id":990929123,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1688989796,"status":10,"status_display":"Accepted","runtime":"301 ms","url":"/submissions/detail/990929123/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(root == NULL){\n            return 0;\n        }\n        int rightSide = 1;\n        int leftSide = 1;\n       if(root->right){\n           rightSide = minDepth(root->right) + 1;\n           \n       }\n       if(root->left){\n           leftSide = minDepth(root->left) + 1;\n       }\n       if(rightSide == 1){\n           return leftSide;\n       }\n       if(leftSide == 1){\n           return rightSide;\n       }\n       return min(leftSide, rightSide);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}