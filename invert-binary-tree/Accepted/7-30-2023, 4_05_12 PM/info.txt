{"id":1007627561,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1690713312,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1007627561/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root){\n        if(root == NULL){\n            return;\n        }\n        TreeNode* temp = root;\n        TreeNode* flag = temp->right;\n        temp->right = temp->left;\n        temp->left = flag;\n        helper(temp->left);\n        helper(temp->right);\n\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        helper(root);\n        return root;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}