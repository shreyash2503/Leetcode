{"id":842986905,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1668391896,"status":10,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/842986905/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if(root == NULL) return 0;\n        int sum = 0;\n        if(root->val >= low && root->val <= high)\n        {\n            sum += root->val;\n        }\n        if(root->val < low)\n        {\n            sum += rangeSumBST(root->right, low, high);\n        }\n        else if(root->val > high)\n        {\n            sum += rangeSumBST(root->left, low, high);\n        }\n        else\n        {\n            sum += rangeSumBST(root->left, low, high) + rangeSumBST(root->right, low, high);\n        }\n        return sum;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}