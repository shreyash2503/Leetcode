{"id":1092690661,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699263834,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1092690661/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root, int prev){\n        if(root == NULL){\n            return 0;\n        }\n        int l = helper(root->left, root->val);\n        int r = helper(root->right, root->val);\n        if(prev == root->val){\n            if(l != 0 && r != 0){\n                return 1 + l + r;\n            }\n        } else {\n\n        }\n\n        return max(l, r);\n\n    }\n    int longestUnivaluePath(TreeNode* root) {\n        if(root == NULL){\n            return 0;\n        }\n        int prev = root->val;\n        int ans = helper(root, prev) - 1;\n        cout << ans;\n\n        return ans;\n\n        \n    }\n};","compare_result":"00010000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-univalue-path","has_notes":false,"flag_type":1}