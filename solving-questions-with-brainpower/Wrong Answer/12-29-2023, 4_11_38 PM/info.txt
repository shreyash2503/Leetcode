{"id":1131310195,"lang":"cpp","lang_name":"C++","time":"1 day, 17 hours","timestamp":1703846498,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1131310195/","is_pending":"Not Pending","title":"Solving Questions With Brainpower","memory":"N/A","code":"class Solution {\npublic:\n    // long long helper(int index, vector<long long> &dp, vector<vector<int>> &questions){\n    //     if(index >= questions.size()){\n    //         return 0;\n    //     }\n    //     if(dp[index] != -1){\n    //         return dp[index];\n    //     }\n\n    //     // Decided not to solve the question\n    //     long long ans1 = helper(index + 1, dp, questions);\n\n    //     //Decided to solve the question\n    //     long long ans2 = questions[index][0] + helper(questions[index][1] + index + 1, dp, questions);\n    //     dp[index] = max(ans1, ans2);\n    //     return dp[index];\n\n\n\n    // }\n    long long mostPoints(vector<vector<int>>& questions) {\n        size_t size = questions.size();\n        vector<long long> dp(size, -1);\n        // long long ans = helper(0, dp, questions);\n        dp[questions.size() - 1] = questions[size - 1][0];\n\n        for(int i=size-2;i>=0;i--){\n            long long ans1 = dp[i + 1];\n            int index = i + questions[i][1] + 1;\n            long long ans2 = INT_MIN;\n            if(index < size){\n                ans2 = dp[index] + questions[i][0];\n            }\n            dp[i] = max(ans1, ans2);\n\n        }\n\n        return dp[0];\n        \n    }\n};","compare_result":"111110011011110001001100010000001000010000100000101111","title_slug":"solving-questions-with-brainpower","has_notes":false,"flag_type":1}