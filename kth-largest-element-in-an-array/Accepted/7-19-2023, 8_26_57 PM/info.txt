{"id":998542031,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1689778617,"status":10,"status_display":"Accepted","runtime":"600 ms","url":"/submissions/detail/998542031/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"50 MB","code":"class Solution {\npublic:\n    vector<int> heap;\n    int leftChild(int index){\n        return 2 * index + 1;\n    }\n    int rightChild(int index){\n        return 2 * index + 2;\n    }\n    int parent(int index){\n        return (index - 1) / 2;\n    }\n\n    void heapifyUp(int index){\n        int current = index;\n        while(current > 0 && heap[parent(current)] < heap[current]){\n            swap(heap[parent(current)], heap[current]);\n            current = parent(current);\n        }\n    }\n\n    void heapifyDown(int index){\n        int left = leftChild(index);\n        int right = rightChild(index);\n        int largest = index;\n        if(left < heap.size() && heap[left] > heap[largest]){\n            largest = left;\n\n        }\n        if(right < heap.size() && heap[right] > heap[largest]){\n            largest = right;\n        }\n\n        if(largest != index){\n            swap(heap[largest], heap[index]);\n            heapifyDown(largest);\n        }\n    }\n\n\n    void insert(int value){\n        heap.push_back(value);\n        heapifyUp(heap.size() - 1);\n    }\n\n    int getMax(){\n        if(heap.size() == 0){\n            return -1;\n        }\n        int element = heap[0];\n        int value = heap.back();\n        heap.pop_back();\n        heap[0] = value;\n        heapifyDown(0);\n        return element;\n    }\n\n    void printHeap() {\n        int level = 0;\n        int count = 0;\n        for (int i = 0; i < heap.size(); i++) {\n            if (i == count) {\n                cout << \"\\nLevel \" << level << \": \";\n                count = count * 2 + 1;\n                level++;\n            }\n            cout << heap[i] << \" \";\n        }\n        cout << endl;\n    }\n\n\n    int findKthLargest(vector<int>& nums, int k) {\n\n        for(int i=0;i<nums.size();i++){\n            insert(nums[i]);\n        }\n        printHeap();\n        int ele = 0;\n        int count = 0;\n        while(count < k){\n            ele = getMax();\n            cout<<ele<<endl;\n            count++;\n        }\n\n        return ele;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}