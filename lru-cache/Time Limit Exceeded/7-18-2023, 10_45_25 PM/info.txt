{"id":997767432,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1689700525,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/997767432/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"class LRUCache {\npublic:\n    map<int,int> mymap;\n    list<int> ls;\n    int cp;\n    LRUCache(int capacity) {\n        cp = capacity;\n        mymap.clear();\n        ls.clear();\n    }\n    \n    int get(int key) {\n        if(mymap.find(key) == mymap.end()) return -1;\n        ls.remove(key);\n        ls.push_front(key);\n        return mymap[key];\n    }\n    \n    void put(int key, int value) {\n        if(mymap.find(key) == mymap.end()){\n            if(ls.size() == cp){\n                /// full\n                int last = ls.back();\n                ls.pop_back();\n                mymap.erase(last);\n            }\n            mymap[key] = value;\n            ls.push_front(key);\n            \n        }else{\n            ls.remove(key);\n            ls.push_front(key);\n            mymap[key] = value;\n        }\n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */","compare_result":"1111111111111111111100","title_slug":"lru-cache","has_notes":false,"flag_type":1}