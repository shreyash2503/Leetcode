{"id":1014620569,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691407133,"status":10,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/1014620569/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root){\n        vector<pair<int, int>> v;\n        queue<TreeNode*> q;\n        q.push(root);\n        int level = 1;\n        while(!q.empty()){\n            int size = q.size();\n            int sum = 0;\n            for(int i=0;i<size;i++){\n                TreeNode* temp = q.front();\n                q.pop();\n                if(temp && temp->left) q.push(temp->left);\n                if(temp && temp->right) q.push(temp->right);\n                sum += temp->val;\n            }\n            v.push_back(make_pair(sum, level));\n            level++;\n        }\n        int max = INT_MIN;\n        int l = -1;\n        for(const auto& p : v){\n            if(p.first > max){\n                max = p.first;\n                l = p.second;\n            }\n        }\n        return l;\n    }\n    int maxLevelSum(TreeNode* root) {\n        return helper(root);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}