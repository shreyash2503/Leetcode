{"id":1115078549,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1702041257,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1115078549/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void check(TreeNode* root, string &str){\n        if(root == NULL){\n            return;\n        }\n        str += to_string(root->val);\n        if(root->left || root->right){\n            str += '(';\n            check(root->left, str);\n            str += ')';\n        }\n        if(root->right){\n            str += '(';\n            check(root->right, str);\n            str += ')';\n        }\n    }\n    string tree2str(TreeNode* root) {\n        string ans = \"\";\n        check(root, ans);\n        return ans;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree","has_notes":false,"flag_type":1}