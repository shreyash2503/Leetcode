{"id":1085897490,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1698480600,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1085897490/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"N/A","code":"class Solution {\npublic:\n    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {\n        if(edges.size() == 0 && vals.size() != 0){\n            int max = INT_MIN;\n            for(int i=0;i<vals.size(); i++){\n                if(vals[i] > max){\n                    max = vals[i];\n                }\n            }\n\n            return max;\n        }\n        unordered_map<int, vector<int>> map;\n\n        for(int i=0;i<edges.size();i++){\n           map[edges[i][0]].push_back(vals[edges[i][1]]);\n           map[edges[i][1]].push_back(vals[edges[i][0]]);\n        }\n\n        for(auto& pair : map){\n            sort(pair.second.begin(), pair.second.end(), greater<int>());\n        }\n\n        int sum = INT_MIN;\n\n        for(auto &pair : map){\n            cout << pair.first << \" \";\n            for(auto i : pair.second){\n                cout << i << \" \";\n            }\n            cout << endl;\n        }\n\n        for(auto & pair : map){\n            int temp = 0;\n            if(pair.second.size() <= k){\n                for(auto value : pair.second){\n                    temp += value;\n\n                }\n                temp += vals[pair.first];\n                if(temp > sum){\n                    sum = temp;\n                }\n            }\n\n        }\n\n        return sum;\n        \n    }\n};","compare_result":"0111010000110010011010001","title_slug":"maximum-star-sum-of-a-graph","has_notes":false,"flag_type":1}