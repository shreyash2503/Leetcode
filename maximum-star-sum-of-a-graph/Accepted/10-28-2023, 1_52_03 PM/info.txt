{"id":1085902869,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1698481323,"status":10,"status_display":"Accepted","runtime":"517 ms","url":"/submissions/detail/1085902869/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"163.7 MB","code":"// class Solution {\n// public:\n//     int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {\n//         if(edges.size() == 0 && vals.size() != 0){\n//             int max = INT_MIN;\n//             for(int i=0;i<vals.size(); i++){\n//                 if(vals[i] > max){\n//                     max = vals[i];\n//                 }\n//             }\n\n//             return max;\n//         }\n//         unordered_map<int, vector<int>> map;\n\n//         for(int i=0;i<edges.size();i++){\n//            map[edges[i][0]].push_back(vals[edges[i][1]]);\n//            map[edges[i][1]].push_back(vals[edges[i][0]]);\n//         }\n\n//         for(auto& pair : map){\n//             sort(pair.second.begin(), pair.second.end(), greater<int>());\n//         }\n\n//         int sum = INT_MIN;\n\n//         for(auto &pair : map){\n//             cout << pair.first << \" \";\n//             for(auto i : pair.second){\n//                 cout << i << \" \";\n//             }\n//             cout << endl;\n//         }\n\n//         for(auto & pair : map){\n//             int temp = 0;\n//             if(pair.second.size() <= k){\n//                 for(auto value : pair.second){\n//                     temp += value;\n\n//                 }\n//                 temp += vals[pair.first];\n//                 if(temp > sum){\n//                     sum = temp;\n//                 }\n//             }\n\n//         }\n\n//         return sum;\n        \n//     }\n// };\n\nclass Solution {\npublic:\n    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {\n        if(k==0){\n            int maxi=INT_MIN;\n            for(int n:vals)maxi=max(maxi,n);\n            return maxi;\n        }\n        int n=vals.size();\n        map<int,vector<pair<int,int>> > adj;\n        for(auto p:edges){\n            adj[p[0]].push_back({vals[p[1]], p[1]});\n            adj[p[1]].push_back({vals[p[0]], p[0],});\n        }\n        int maxi=INT_MIN;\n        for(int i=0;i<n;i++){\n            sort(adj[i].rbegin(),adj[i].rend());\n            int kk=k;\n            int sum=vals[i];\n            maxi=max(maxi,sum);\n            for(auto p:adj[i]){\n                sum+=p.first;\n                kk--;\n                maxi=max(maxi,sum);\n                if(kk==0 || p.first<0)break;\n            }\n        }\n        return maxi;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"maximum-star-sum-of-a-graph","has_notes":false,"flag_type":1}