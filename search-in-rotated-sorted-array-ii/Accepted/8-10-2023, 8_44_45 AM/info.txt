{"id":1017137192,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1691637285,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1017137192/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"14 MB","code":"class Solution {\npublic:\n    bool helper(vector<int>& nums, int target){\n        int l = 0;\n        int r = nums.size() - 1;\n        while(l <= r){\n            int mid = l + (r - l) / 2;\n            if(nums[mid] == target){\n                return true;\n            }\n            if(nums[l] == nums[mid] && nums[r] == nums[mid]){\n                // && and not || as if we use or we are missing the condition that l and r itself can be mid\n                l++;\n                r--;\n            } else if(nums[mid] >= nums[l]){\n                if(target >= nums[l] && target <= nums[mid]){\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                } \n            } else {\n                if(target >= nums[mid] && target <= nums[r]){\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n        }\n\n        return false;\n    }\n    bool search(vector<int>& nums, int target) {\n        return helper(nums, target);\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false,"flag_type":1}