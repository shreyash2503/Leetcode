{"id":831333577,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1666867000,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/831333577/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root ,int &c)\n    {\n        if(root == NULL) return 0;\n        int left = helper(root->left , c);\n        int right = helper(root->right, c);\n        c = max(c,left+right);\n        return 1 + max(left, right);\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        int cnt = 0;\n        helper(root, cnt);\n        return cnt;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}