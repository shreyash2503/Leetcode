{"id":1089010911,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1698832045,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1089010911/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans;\n    int val = INT_MIN;\n    int freq = 0;\n    int maxFreq = INT_MIN;\n\n\n    void inorder(TreeNode* root){\n        if(root == NULL){\n            return;\n        }\n\n        if(root->left){\n            inorder(root->left);\n        }\n        if(val == root->val){\n            freq ++;\n        } else {\n            val = root->val;\n            freq = 1;\n        } \n        if(freq == maxFreq){\n            ans.push_back(val);\n        }\n        if(freq > maxFreq){\n            maxFreq = freq;\n            ans = {val};\n        }\n\n        inorder(root->right);\n\n\n    }\n\n\n    \n    vector<int> findMode(TreeNode* root) {\n        inorder(root);\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}