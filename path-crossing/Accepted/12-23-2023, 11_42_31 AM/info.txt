{"id":1126373710,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1703311951,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1126373710/","is_pending":"Not Pending","title":"Path Crossing","memory":"7.2 MB","code":"class Solution {\npublic:\n    bool isPathCrossing(string path) {\n        pair<int, int> origin = make_pair(0, 0);\n        set<pair<int, int>> s;\n        s.insert(origin);\n        for(char c : path){\n            if(c == 'N'){\n                origin.second += 1;\n            } else if(c == 'E'){\n                origin.first += 1;\n            } else if(c == 'S'){\n                origin.second -= 1;\n            } else {\n                origin.first -= 1;\n            }\n            cout << origin.first << \" \" << origin.second << endl;\n            if(s.find(origin) != s.end()){\n                return true;\n            } else {\n                s.insert(origin);\n            }\n        }\n        return false;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing","has_notes":false,"flag_type":1}